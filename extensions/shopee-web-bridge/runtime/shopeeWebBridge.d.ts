// Generated by dts-bundle-generator v5.9.0

export interface ILoginOptions {
	hidePopup: 0 | 1;
	redirectPath: string;
	redirectTab: 0 | 1;
}
declare enum LoginRespStatus {
	FAILED = 0,
	SUCCESS = 1,
	CANCELED = 2
}
export declare type LoginCallback = (status: {
	status: LoginRespStatus;
}) => void;
export declare type LoginT = (options: ILoginOptions, callback?: LoginCallback) => void;
export declare type TConfigurePageParam = {
	title?: string;
	showNavbar: boolean;
};
export declare type TConfigurePage = (config: TConfigurePageParam) => void;
declare class ShopeeWebBridgeClass {
	get WebBridge(): any;
	get callHandler(): any;
	get registerHandler(): any;
	get unregisterHandler(): any;
	/**
	 * Initialize web bridge;
	 * @returns Returns boolean indicating the successful initialization
	 */
	init: () => boolean;
	login: LoginT;
	configurePage: TConfigurePage;
	navigateTo: (url: string) => void;
	setScreenAutolock: (isEnabled: boolean) => void;
	regApplicationWillResignActive: (callback: () => void) => void;
	unregApplicationWillResignActive: () => void;
	regApplicationDidBecomeActive: (callback: () => void) => void;
	unregApplicationDidBecomeActive: () => void;
	registerWillReappear: (callback: () => void) => void;
	registerDidDisappear: (callback: () => void) => void;
	unregisterWillReappear: () => void;
	unregisterDidDisappear: () => void;
}
export declare const instance: ShopeeWebBridgeClass;

export as namespace ShopeeWebBridge;

export {};
